defaults: &defaults
  docker:
    - image: opuscapita/minsk-core-ci:4
  working_directory: ~/build

version: 2.1

orbs:
  jira: circleci/jira@1.2.2

jobs:
  init:
    docker:
      - image: opuscapita/minsk-core-machineuser-env:2
    steps:
      - run: generate_bash_env_exports.sh GH_MAIL GH_NAME CIRCLE_CI_TOKEN > ~/generated_bash_env
      - persist_to_workspace:
          root: ~/
          paths:
            - generated_bash_env

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /workspace
      - run: cat /workspace/generated_bash_env >> $BASH_ENV
      - checkout

      - restore_cache:
          keys:
            - loaders-{{ .Branch }}-{{ checksum "package.json" }}
            - loaders-{{ .Branch }}
            - loaders

      - run: if [ -f /.dockerenv ]; then configure-maven.sh && configure-grails.sh && configure-npm.sh; fi

      - run:
          name: "Installing dependencies."
          command: yarn install

      - save_cache:
          key: loaders-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
              - ./node_modules
              - ./yarn.lock

      - run:
          name: "Running lint."
          command: npm run lint

#      - run:
#          name: test
#          command: npm test
#
#      - run:
#          name: upload-coverage
#          command: npm run upload-coverage
#
#      - store_artifacts:
#          path: test-results.xml
#          prefix: tests
#
#      - store_test_results:
#          path: test-results.xml

  build_release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /workspace
      - run: cat /workspace/generated_bash_env >> $BASH_ENV
      - checkout

      - restore_cache:
          keys:
            - loaders-{{ .Branch }}-{{ checksum "package.json" }}
            - loaders-{{ .Branch }}
            - loaders

      - run: if [ -f /.dockerenv ]; then configure-maven.sh && configure-grails.sh && configure-npm.sh; fi

      - run:
          name: "Installing dependencies."
          command: yarn install

      - save_cache:
          key: loaders-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
              - ./node_modules
              - ./yarn.lock

      - run:
          name: "Running lint."
          command: npm run lint

      - run:
          name: "Deploy."
          command: npm run publish-release

  release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /workspace
      - run: cat /workspace/generated_bash_env >> $BASH_ENV
      - checkout
      - run:
          name: Executing release scrtipt.
          command: .circleci/release.sh

workflows:
  version: 2
  release-and-build:
    jobs:
      - init:
          filters:
            tags:
              only: /.*/
      - release:
          filters:
            branches:
              only: release
          requires:
            - init
          post-steps:
            - jira/notify:
                token_name: "CIRCLE_CI_TOKEN"

      - build:
          filters:
            branches:
              ignore:
                - gh-pages
                - release
          requires:
            - init
          post-steps:
            - jira/notify:
                token_name: "CIRCLE_CI_TOKEN"

      - build_release:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - init
          post-steps:
            - jira/notify:
                token_name: "CIRCLE_CI_TOKEN"

